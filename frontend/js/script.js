// SIMULA√á√ÉO DO BANCO DE DADOS (Requisito 8¬∫)
// Os dados devem ter: Marca, Modelo, Ano, Pre√ßo, Localiza√ß√£o e Fotos.
// SIMULA√á√ÉO DO BANCO DE DADOS (Requisito 8¬∫)
const veiculos = [
    {
        id: 1,
        marca: "Toyota",
        modelo: "Corolla",
        ano: 2022,
        preco: 120000,
        localizacao: "S√£o Paulo, SP",
        descricao: "Carro em √≥timo estado, baixa quilometragem.",
        foto: "carro1.jpg",
        fabricante: "Toyota", // NOVO
        cambio: "automatico"  // NOVO
    },
    {
        id: 2,
        marca: "Honda",
        modelo: "Civic",
        ano: 2019,
        preco: 95000,
        localizacao: "Campinas, SP",
        descricao: "Completo e com todas as revis√µes em dia.",
        foto: "carro2.jpg",
        fabricante: "Honda",  // NOVO
        cambio: "manual"     // NOVO
    },
    {
        id: 3,
        marca: "Chevrolet",
        modelo: "Onix",
        ano: 2023,
        preco: 75000,
        localizacao: "Rio de Janeiro, RJ",
        descricao: "Seminovo, econ√¥mico e ideal para a cidade.",
        foto: "carro3.jpg",
        fabricante: "Chevrolet", // NOVO
        cambio: "manual"       // NOVO
    }
    // Adicione mais ve√≠culos de teste se desejar, com diferentes fabricantes/c√¢mbios
];
// ... restante do script.js

// Fun√ß√£o para renderizar os ve√≠culos na p√°gina
function renderizarVeiculos(listaDeVeiculos) {
    const listaHtml = document.querySelector('.vehicle-list');
    listaHtml.innerHTML = ''; // Limpa a lista antes de adicionar novos

    if (listaDeVeiculos.length === 0) {
        listaHtml.innerHTML = '<p>Nenhum ve√≠culo encontrado para esta busca.</p>';
        return;
    }

    listaDeVeiculos.forEach(veiculo => {
        // Cria um card para cada ve√≠culo
        const card = document.createElement('div');
        card.classList.add('vehicle-card');
        
        // Formata o pre√ßo para o padr√£o brasileiro
        const precoFormatado = veiculo.preco.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });

        // Conte√∫do do card (Requisito 6¬∫: fotos, pre√ßos e descri√ß√£o)
        card.innerHTML = `
            <img src="img/${veiculo.foto}" alt="${veiculo.marca} ${veiculo.modelo}">
            <h4>${veiculo.marca} ${veiculo.modelo} (${veiculo.ano})</h4>
            <p class="price">${precoFormatado}</p>
            <p class="location">${veiculo.localizacao}</p>
            <p class="description">${veiculo.descricao.substring(0, 50)}...</p>
            <button onclick="alert('Detalhes do Ve√≠culo ID: ${veiculo.id}')">Ver Detalhes</button>
        `;
        
        listaHtml.appendChild(card);
    });
}

// ----------------------------------------------------------------------
// GEST√ÉO DE ESTADO DE LOGIN (RF 1¬∫)
// ----------------------------------------------------------------------

function updateNavigation() {
    const nav = document.querySelector('header nav');
    // Verifica se h√° algum usu√°rio logado no localStorage
    const loggedInUser = localStorage.getItem('loggedInUser'); 
    
    // Limpa a navega√ß√£o atual
    nav.innerHTML = ''; 

    // Adiciona o link principal
    nav.innerHTML += '<a href="index.html">P√°gina Inicial</a>';

    if (loggedInUser) {
        // Se o usu√°rio est√° logado, mostra Anunciar e Perfil/Sair
        nav.innerHTML += '<a href="anunciar.html">Anunciar</a>';
        nav.innerHTML += '<a href="perfil.html">Meu Perfil</a>';
        nav.innerHTML += '<a href="#" id="logout-button">Sair</a>';
    } else {
        // Se N√ÉO est√° logado, mostra as op√ß√µes de Login/Cadastro
        nav.innerHTML += '<a href="login.html">Login/Cadastro</a>';
    }
}

// Adicionar a l√≥gica de sair (logout)
const logoutButton = document.getElementById('logout-button');
if (logoutButton) {
    logoutButton.addEventListener('click', function(e) {
        e.preventDefault();
        localStorage.removeItem('loggedInUser'); // Remove o status de login
        alert('Voc√™ saiu da sua conta.');
        window.location.href = 'index.html'; // Redireciona para a home
    });
}

// ... (Restante do seu script.js, incluindo filtros e cadastro)

// ----------------------------------------------------------------------
// L√ìGICA DE FILTRO UNIFICADA (RF 4¬∫ e Localidade) - CORRIGIDA
// ----------------------------------------------------------------------
const filterForm = document.getElementById('filter-form');

// üéØ AGORA S√ì ADICIONA O LISTENER SE O FORMUL√ÅRIO EXISTIR NA P√ÅGINA üéØ
if (filterForm) { 
    filterForm.addEventListener('submit', function(event) {
        event.preventDefault(); 

        // Pega os valores selecionados nos filtros:
        
        // 1. Localidade (NOVO: Agora unificado!)
        const localidadeSelecionada = document.getElementById('city-state').value.toLowerCase();
        
        // 2. Fabricante
        const fabricanteSelecionado = document.getElementById('fabricante').value;

        // 3. Ano (Tratamento para evitar problemas com NaN)
        const anoElement = document.getElementById('ano-fab');
        const anoSelecionado = anoElement.value ? parseInt(anoElement.value) : ''; 
        
        // 4. C√¢mbio
        const cambioSelecionado = document.getElementById('cambio').value;

        // Filtra a lista de ve√≠culos, exigindo que o carro passe em TODOS os crit√©rios
        const resultadosFiltrados = veiculos.filter(veiculo => {
            let passaNoFiltro = true;

            // CRIT√âRIO 1: Localidade
            // Se algo foi digitado E a localiza√ß√£o do ve√≠culo n√£o cont√©m o termo digitado, o filtro falha.
            if (localidadeSelecionada && !veiculo.localizacao.toLowerCase().includes(localidadeSelecionada)) {
                passaNoFiltro = false;
            }

            // CRIT√âRIO 2: Fabricante
            // Se um fabricante foi selecionado E n√£o for igual ao do ve√≠culo, o filtro falha.
            if (fabricanteSelecionado && veiculo.fabricante !== fabricanteSelecionado) {
                passaNoFiltro = false;
            }

            // CRIT√âRIO 3: Ano
            // Se um ano foi selecionado E n√£o for igual ao do ve√≠culo, o filtro falha.
            if (anoSelecionado !== '' && veiculo.ano !== anoSelecionado) {
                passaNoFiltro = false;
            }

            // CRIT√âRIO 4: C√¢mbio
            if (cambioSelecionado && veiculo.cambio !== cambioSelecionado) {
                passaNoFiltro = false;
            }

            return passaNoFiltro;
        });

        // Exibe os resultados
        renderizarVeiculos(resultadosFiltrados);
        document.querySelector('.vehicle-list h3').textContent = "Resultados da Busca Detalhada";
    });
}

// ----------------------------------------------------------------------
// SIMULA√á√ÉO DE CADASTRO (RF 1¬∫)
// ----------------------------------------------------------------------

// ----------------------------------------------------------------------
// SIMULA√á√ÉO DE CADASTRO (RF 1¬∫) - Fun√ß√£o Cham√°vel pelo HTML
// ----------------------------------------------------------------------
function handleCadastro(event) {
    // ESSA √â A CHAVE! O HTML chama esta fun√ß√£o, e ela impede o submit padr√£o.
    event.preventDefault(); 

    // 1. Pega os valores dos campos (do cadastro.html)
    const name = document.getElementById('name').value;
    const email = document.getElementById('email').value;
    const password = document.getElementById('password').value;
    const confirmPassword = document.getElementById('confirm-password').value;

    // 2. Valida√ß√£o b√°sica (Senhas s√£o iguais?)
    if (password !== confirmPassword) {
        alert('Erro: As senhas digitadas n√£o s√£o iguais. Por favor, tente novamente.');
        return; // Interrompe o processo
    }
    
    // 3. Simula√ß√£o de salvamento em "Banco de Dados" (usando localStorage)
    
    // CUIDADO: Em um projeto real, senhas NUNCA devem ser salvas em texto puro!
    const novoUsuario = {
        name: name,
        email: email,
        password: password // Simula√ß√£o, apenas para fins de teste Front-end
    };

    // 4. Salvar no localStorage:

    // a) Tenta buscar a lista de usu√°rios existente, ou inicia uma nova
    let users = JSON.parse(localStorage.getItem('users')) || [];

    // b) Verifica se o e-mail j√° est√° cadastrado
    const userExists = users.some(user => user.email === email);
    if (userExists) {
        alert('Erro: Este e-mail j√° est√° cadastrado. Tente fazer login.');
        return;
    }

    // c) Adiciona o novo usu√°rio √† lista
    users.push(novoUsuario);

    // d) Salva a lista atualizada de volta no localStorage
    localStorage.setItem('users', JSON.stringify(users));

    alert('üéâ Cadastro realizado com sucesso! Fa√ßa login para continuar.');

    // Redireciona para a tela de login
    window.location.href = 'login.html';
}

// ----------------------------------------------------------------------
// SIMULA√á√ÉO DE LOGIN (RF 1¬∫)
// ----------------------------------------------------------------------
function handleLogin(event) {
event.preventDefault(); 

    // 1. Pega os valores e remove espa√ßos extras com .trim()
    const email = document.getElementById('email').value.trim(); 
    const password = document.getElementById('password').value; // Senha n√£o precisa de trim

    // 2. Tenta buscar a lista de usu√°rios
    const users = JSON.parse(localStorage.getItem('users')) || [];

    // 3. Busca o usu√°rio que corresponde. CRUCIAL: usa .trim() no e-mail do cadastro tamb√©m!
    const foundUser = users.find(user => 
        // Compara o e-mail digitado com o e-mail SALVO (com .trim() para limpar)
        user.email.trim() === email && user.password === password
    );

    if (foundUser) {
        // Se o usu√°rio foi encontrado:

        // Salva o status de login no localStorage (simulando a sess√£o)
        // Guardamos o nome e email do usu√°rio logado para usar no Perfil
        localStorage.setItem('loggedInUser', JSON.stringify({
            name: foundUser.name,
            email: foundUser.email
        }));

        alert(`üéâ Login realizado com sucesso, ${foundUser.name}!`);

        // Redireciona para a p√°gina inicial
        window.location.href = 'index.html';
    } else {
        // Se o usu√°rio n√£o foi encontrado:
        alert('Erro: E-mail ou senha incorretos. Tente novamente.');
    }
}


// ----------------------------------------------------------------------
// PREENCHIMENTO DO PERFIL (RF 2¬∫) - CORRIGIDO
// ----------------------------------------------------------------------
function loadProfileData() {
    const perfilForm = document.getElementById('perfil-form');
    
    // üéØ PONTO DE VERIFICA√á√ÉO 1: A FUN√á√ÉO FOI CHAMADA? üéØ
    console.log("loadProfileData: Fun√ß√£o Iniciada"); 

    if (!perfilForm) return; 

    // üéØ PONTO DE VERIFICA√á√ÉO 2: O FORMUL√ÅRIO FOI ENCONTRADO? üéØ
    console.log("loadProfileData: Formul√°rio Encontrado!"); 

    const loggedInUserString = localStorage.getItem('loggedInUser');

    if (loggedInUserString) {
        const user = JSON.parse(loggedInUserString);

        // üéØ PONTO DE VERIFICA√á√ÉO 3: OS DADOS EST√ÉO SENDO LIDOS? üéØ
        console.log("Dados do usu√°rio:", user); 
        
        // Remove espa√ßos extras antes de preencher para evitar problemas futuros
        document.getElementById('nome').value = user.name.trim() || ''; 
        document.getElementById('email').value = user.email.trim() || ''; 
        
        document.querySelector('.perfil-container h2').textContent = `Meu Perfil - Ol√°, ${user.name.split(' ')[0]}!`;
        
    } else {
        // ... (resto do c√≥digo)
    }
}

// ----------------------------------------------------------------------
// L√ìGICA DE EDI√á√ÉO DE PERFIL (RF 2¬∫) - CORRIGIDO
// ----------------------------------------------------------------------
function handleProfileEdit(event) {
    event.preventDefault(); 

    // 1. Pega os novos valores e aplica .trim() para limpar
    const newName = document.getElementById('nome').value.trim();
    const newEmail = document.getElementById('email').value.trim();
    const newPassword = document.getElementById('senha').value;

    // 2. Pega o e-mail logado e tamb√©m aplica .trim() na chave de busca
    const loggedUserString = localStorage.getItem('loggedInUser');
    if (!loggedUserString) return;
    
    // USAMOS .trim() AQUI
    const oldEmail = JSON.parse(loggedUserString).email.trim(); 

    // 3. Busca a lista completa de usu√°rios
    let users = JSON.parse(localStorage.getItem('users')) || [];

    // 4. Encontra o √≠ndice do usu√°rio a ser atualizado
    // USAMOS .trim() AQUI TAMB√âM para garantir que a compara√ß√£o com a base seja exata
    const userIndex = users.findIndex(user => user.email.trim() === oldEmail); 

    if (userIndex !== -1) {
        // Se encontrou o usu√°rio:
        
        // a) Atualiza os dados (usando os valores com .trim())
        users[userIndex].name = newName;
        users[userIndex].email = newEmail;
        
        if (newPassword) {
            users[userIndex].password = newPassword;
        }

        // b) Salva a lista completa e o status de login atualizado
        localStorage.setItem('users', JSON.stringify(users));
        localStorage.setItem('loggedInUser', JSON.stringify({
            name: newName,
            email: newEmail
        }));

        alert('‚úÖ Perfil atualizado com sucesso! (Novo nome: ' + newName + ')');
        
        // Recarrega a p√°gina para atualizar o menu de navega√ß√£o
        window.location.reload(); 
        
    } else {
        alert('Erro: Usu√°rio n√£o encontrado na base de dados para atualiza√ß√£o.');
    }
}




// ======================================================================
// GARANTIR EXECU√á√ÉO AP√ìS CARREGAMENTO COMPLETO DA P√ÅGINA
// Este bloco deve ser o √öLTIMO no seu arquivo.
// ======================================================================
document.addEventListener('DOMContentLoaded', function() {
    
    // ATUALIZA O MENU DE NAVEGA√á√ÉO (Login/Logout/Perfil)
    const navFunc = window.updateNavigation;
    if (typeof navFunc === 'function') {
        navFunc();
    }
    
    // CARREGA OS DADOS DO PERFIL (se estivermos na p√°gina perfil.html)
    const loadFunc = window.loadProfileData;
    if (typeof loadFunc === 'function') {
        loadFunc();
    }
    
    // RENDERIZA OS VE√çCULOS (se estivermos na p√°gina inicial)
    const vehicleList = document.querySelector('.vehicle-list');
    const renderFunc = window.renderizarVeiculos;
    if (vehicleList && typeof renderFunc === 'function') {
        renderFunc(veiculos); 
    }
    
    // Adicionar a l√≥gica de Logout AP√ìS a navega√ß√£o ter sido atualizada
    const logoutButton = document.getElementById('logout-button');
    if (logoutButton) {
        logoutButton.addEventListener('click', function(e) {
            e.preventDefault();
            localStorage.removeItem('loggedInUser');
            alert('Voc√™ saiu da sua conta.');
            window.location.href = 'index.html'; 
        });
    }
});


// ----------------------------------------------------------------------
// L√ìGICA DE SIMULA√á√ÉO DE AN√öNCIO (RF 8¬∫)
// ----------------------------------------------------------------------
function handleAnuncio(event) {
    event.preventDefault(); // Impede o recarregamento da p√°gina

    // 1. Coleta dos dados do vendedor (usu√°rio logado)
    const loggedUserString = localStorage.getItem('loggedInUser');
    if (!loggedUserString) {
        alert("Erro: Voc√™ precisa estar logado para publicar um an√∫ncio.");
        return;
    }
    const user = JSON.parse(loggedUserString);

    // üéØ NOVO: Garantir que o Pre√ßo √© um n√∫mero v√°lido üéØ
    const precoValue = document.getElementById('preco').value;
    const precoFloat = parseFloat(precoValue);
    if (isNaN(precoFloat)) {
        alert("Erro de Valida√ß√£o: Por favor, insira um pre√ßo v√°lido (apenas n√∫meros).");
        return; 
    }

    // üéØ NOVO: Garantir que os campos SELECT foram selecionados (se forem required) üéØ
    const combustivelValue = document.getElementById('combustivel').value;
    const cambioTipoValue = document.getElementById('cambio_tipo').value;

    if (!combustivelValue || !cambioTipoValue) {
        alert("Erro de Valida√ß√£o: Por favor, selecione o Combust√≠vel e o Tipo de C√¢mbio.");
        return;
    }
    
    
    // 2. Coleta dos dados do ve√≠culo (campos do formul√°rio)
    const novoAnuncio = {
        // Bloco 1: Identifica√ß√£o e Pre√ßo (Obrigat√≥rio)
        id: Date.now(), // ID √∫nico baseado no tempo (simula√ß√£o)
        vendedorEmail: user.email,
        marca: document.getElementById('marca').value.trim(),
        modelo: document.getElementById('modelo').value.trim(),
        versao: document.getElementById('versao').value.trim(),
        anoModelo: document.getElementById('ano_modelo').value.trim(),
        preco: precoFloat, // Usa o valor j√° validado
        localizacao: document.getElementById('localizacao').value.trim(),
        
        // Bloco 2: Mec√¢nica e Filtros
        combustivel: combustivelValue,
        litragem: document.getElementById('litragem').value.trim(),
        cambioTipo: cambioTipoValue,
        tracao: document.getElementById('tracao').value.trim(),

        // Bloco 3: Acess√≥rios e Descri√ß√£o
        descricao: document.getElementById('descricao').value.trim(),
        seguranca: document.getElementById('seguranca').value.trim(),
        conforto: document.getElementById('conforto').value.trim(),
        infotenimento: document.getElementById('infotenimento').value.trim(),
        
        // Bloco 4: Fotos (Simula√ß√£o da URL)
        // Em um sistema real, aqui salvar√≠amos as URLs das fotos carregadas no servidor
        fotosCount: document.getElementById('fotos').files.length || 0,
        status: 'Ativo'
    };

    // 3. Simula√ß√£o de salvamento (em um array de an√∫ncios no localStorage)
    let anuncios = JSON.parse(localStorage.getItem('anuncios')) || [];
    
    // Adiciona o novo an√∫ncio √† lista
    anuncios.push(novoAnuncio);

    // Salva a lista atualizada de volta
    localStorage.setItem('anuncios', JSON.stringify(anuncios));

    // 4. Feedback e Redirecionamento
    alert('‚úÖ An√∫ncio Publicado com Sucesso! (' + novoAnuncio.marca + ' ' + novoAnuncio.modelo + ')');
    
    // Redireciona para a p√°gina de perfil para que o vendedor possa ver o an√∫ncio
    window.location.href = 'perfil.html';
}